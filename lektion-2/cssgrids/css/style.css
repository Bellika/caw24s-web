[class*="container"] {
    border:1px solid #333;
    min-height: 300px;
    width: 600px;
    margin: 20px;
    
    display: grid;
}

/* Grids with specific positioning */
.container {
    grid-template-columns: [first] 40px [line2] 50px [line3] auto [col4-start] 50px [five] 40px [end];
    grid-template-rows: [row1-start] 25% [row1-end] 100px [third-line] auto [last-line];
}

.item-a {
    background-color: pink;

    grid-column-start: 2;
    grid-column-end: five;
    grid-row-start: row1-start;
    grid-row-end: 3;
}
.item-b {
    background-color: rgba(135, 206, 235, 0.5);

    grid-column-start: 1;
    grid-column-end: span col4-start;
    grid-row-start: 2;
    grid-row-end: span 2;
}
.item-c {
    background-color: orange;

    grid-column: 3 / span 2; /* grid-column-start / grid-column-end */
    grid-row: third-line / 4; /* grid-row-start / grid-row-end */
}

/* Grids without specific positioning */
.container2 {
    grid-template-columns: repeat(3, 1fr); /* 1fr 1fr 1fr */
    
    /* padding: 10px; */
    column-gap: 10px;
    row-gap: 20px;
    /* short hand for gap. 2 values*/
    gap: 10px 30px; /* row-gap column-gap */
    /* short hand for gap. 1 value*/
    gap: 20px;

    justify-items: center; /* start | end | center | (default )stretch;*/
    align-items: center; /* start | end | center | (default) stretch;*/
    /* Short-hand for justify/align -items */
    place-items: stretch; /* align-items justify-items*/

    /* Needs available free space to move around */
    /* Example, try to set the grid-template-columns repeat(3, 100px), and the container: width 600px */
    justify-content: normal; /* (default)normal | start | end | center | (default) stretch | space-around | space-between | space-evenly; */
    align-content: normal; /* (default)normal | start | end | center | (default) stretch | space-around | space-between | space-evenly; */
    place-content: normal normal; /* <align-content>  <justify-content>*/ 
}

[class*='box'] {
    /* height: 50px;
    width: 50px; */
    border: 1px solid #333;
    /* padding-top: 30px; */
    
    text-align: center;
}

.box9 {
    justify-self: center;
    align-self: center;
    /* short-hand */
    place-self: center center;
    text-align: center;
    
    padding: 0px;
}

/* Grid area */
.container3 {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: auto; /* default value */

    /* 
    Some rules that are required for grid-areas to work:
    1. All rows need to have equal amount of values
    2. Must manage all children inside of container, when using grid-areas
    3. Need declare grid-area in every child, so that it is effected by grid-template-areas
    4. May only create sections with 4 corners, meaning squares and rectangles
    */
    grid-template-areas: 
        "header header header sidebar"
        "content content content sidebar"
        "footer footer footer sidebar"
    ;

    gap: 10px;
    padding: 10px;

}

header {
    grid-area: header;
    background-color: tomato;
}
main {
    grid-area: content;
    background-color: wheat;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
}
aside {
    grid-area: sidebar;
    background-color: lightcyan;
}
footer {
    grid-area: footer;
    background-color: skyblue;
}